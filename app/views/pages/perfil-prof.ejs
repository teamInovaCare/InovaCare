<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/imagens/logo-bblt.png" sizes="any">
    <title> InovaCare</title>

    <!--Link dos ícones da barra de navegação-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <!--link do arquivo css-->
    <link rel="stylesheet" href="/css/perfil.css">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/footer.css">
    <link rel="stylesheet" href="/css/barranav.css">
    <link rel="stylesheet" href="/css/perfil-upload.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/simple-notify@1.0.4/dist/simple-notify.min.css">

    
    <!--viaCep-->
    <script src="/js/mascaraCep.js"></script>
    <script src="/js/viaCep.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/simple-notify@1.0.4/dist/simple-notify.min.js"></script>
</head>

<body>

        <!--barra de navegação - início -->
        <nav class="menu-desktop">

            <!--Espaço para a logo-->
            <section class="menu-logo">
                <a href="/homepro">
                    <img class="logo logo-desktop" src="/imagens/logo-bblt.png" alt="Logo InovaCare">
                    <img class="logo logo-tablet" src="/imagens/logo-extenso.png" alt="Logo InovaCare">
                    <img class="logo logo-mobile" src="/imagens/logo-borboleta.png" alt="Logo InovaCare">
                </a>
            </section>

            <!--Menu profissional-->
            <ul class="menu-list">
                <li><a class="agenda" href="/agenda">Minha Agenda</a></li>
                <li><a class="consultas" href="/consultas">Consultas</a></li>
                <li><a class="pacientes" href="/pacientes">Pacientes</a></li>
            </ul>


            <ul class="menu-list-direita">
                <li><a href="/perfil/prof" class="icon-perfil" aria-label="Perfil"><i class="bi bi-person-circle"></i></a></li>
                <li class="dropdown">
                    <button class="icon-perfil" aria-label="Menu"><i class="bi bi-three-dots-vertical"></i></button>
                    <section class="dropdown-content">
                        <a href="/sair" class="btn-sair">Sair</a>
                    </section>
                </li>
            </ul>

        </nav>

        <nav class="mobile-menu">
            <section class="menu-logo">
                <a href="/homepro">
                    <img class="logo logo-desktop" src="/imagens/logo-bblt.png" alt="Logo InovaCare">
                    <img class="logo logo-tablet" src="/imagens/logo-extenso.png" alt="Logo InovaCare">
                    <img class="logo logo-mobile" src="/imagens/logo-borboleta.png" alt="Logo InovaCare">
                </a>
            </section>

            <ul class="menu-actions">
                <li><a href="/perfil/prof" class="icon-perfil" aria-label="Perfil"><i class="bi bi-person-circle"></i></a></li>
                <li><button class="hamburguer" onclick="toggleMenu()" aria-label="Menu"></button></li>
            </ul>

            <!-- Menu suspenso do hambúrguer -->
            <ul id="hamburger-menu" class="hamburger-menu-content">
                <li><a href="/agenda">Minha Agenda</a></li>
                <li><a href="/consultas">Consultas</a></li>
                <li><a href="/pacientes">Pacientes</a></li>
                <li><a href="/sair" class="btn-sair-mobile">Sair</a></li>
            </ul>
        </nav>

        <script>
            function toggleMenu() {
                const menu = document.getElementById("hamburger-menu");
                menu.style.display = menu.style.display === "block" ? "none" : "block";
            }
        </script>


        <!--barra de navegação - fim ^^^ -->

    <main>

        <section class="voltar">
            <a href="/homepro">
                <img class="botao-voltar" src="/imagens/seta-esquerda.png" alt="" srcset="">
            </a>
        </section>

        <section class="ttl-perfil">
            <section class="txt-perfil">
                <h3>Meu perfil</h3>
            </section>
        </section>

        <section class="bg-perfil">
            <section class="top">
                <section class="esq-bg-perfil">
                    <section class="foto-perfil-container">
                        <img id="fotoPerfil" src="<%= usuario.foto || '/imagens/perfil-default.svg' %>" alt="Foto do perfil">
                        <input type="file" id="inputFoto" name="inputFoto" accept="image/*" style="display: none;">
                        <button type="button" class="btn-alterar-foto" onclick="document.getElementById('inputFoto').click()" style="display: none;">Alterar foto</button>
                        <button type="button" class="btn-remover-foto" onclick="removerFoto()" style="display: none;">Remover foto</button>
                    </section>
                </section>
                <section class="dir-bg-perfil">
                    <form id="formPerfil" class="infos" enctype="multipart/form-data" method="POST" action="/perfil/atualizar-prof">
                        <section class="conjunto">
                            <section class="ttl-campo">Nome:</section>
                            <input type="text" class="campo" name="nome" value="<%= usuario.nome %>" readonly>
                        </section>

                        <section class="conjunto">
                            <section class="ttl-campo">Data de nascimento:</section>
                            <input type="text" class="campo" name="dataNascimento" value="<%= usuario.dataNascimento %>" readonly>
                        </section>

                        <section class="conjunto">
                            <section class="ttl-campo">CPF:</section>
                            <input type="text" class="campo" name="cpf" value="<%= usuario.cpf %>" readonly>
                        </section>

                        <section class="conjunto">
                            <section class="ttl-campo">E-mail:</section>
                            <input type="email" class="campo" name="email" value="<%= usuario.email %>" readonly>
                        </section>

                        <section class="conjunto">
                            <section class="ttl-campo">Senha:</section>
                            <input type="password" class="campo" name="senha" value="********" readonly>
                        </section>

                        <section class="conjunto">
                            <section class="ttl-campo">Especialidade:</section>
                            <input type="text" class="campo campo-especialidade-display" name="especialidadeDisplay" value="<%= usuario.especialidade %>" readonly>
                            <select class="campo campo-especialidade" name="especialidade" style="display: none;" disabled>
                                <option value="1" <%= usuario.especialidade === 'Clínico Geral' ? 'selected' : '' %>>Clínico Geral</option>
                                <option value="2" <%= usuario.especialidade === 'Fisioterapeuta' ? 'selected' : '' %>>Fisioterapeuta</option>
                                <option value="3" <%= usuario.especialidade === 'Fonoaudiólogo' ? 'selected' : '' %>>Fonoaudiólogo</option>
                                <option value="4" <%= usuario.especialidade === 'Nutricionista' ? 'selected' : '' %>>Nutricionista</option>
                                <option value="5" <%= usuario.especialidade === 'Psicólogo' ? 'selected' : '' %>>Psicólogo</option>
                                <option value="6" <%= usuario.especialidade === 'Enfermeiro' ? 'selected' : '' %>>Enfermeiro</option>
                                <option value="7" <%= usuario.especialidade === 'Terapeuta Ocupacional' ? 'selected' : '' %>>Terapeuta Ocupacional</option>
                            </select>
                        </section>

                        <section class="conjunto">
                            <section class="ttl-campo">Registro Médico:</section>
                            <input type="text" class="campo" name="registroMedico" value="<%= usuario.registroMedico %>" readonly>
                        </section>

                        <!-- Campo CEP (modo edição) -->
                        <section class="conjunto endereco-cep" style="display: none;">
                            <section class="ttl-campo">CEP:</section>
                            <input type="text" class="campo" name="cep" id="cep" onblur="pesquisacep(this.value);" onkeyup="mascaraCep(event)" value="<%= usuario.cep %>" readonly>
                        </section>

                        <!-- Campo de endereço único (modo visualização) -->
                        <section class="conjunto endereco-simples">
                            <section class="ttl-campo">Endereço:</section>
                            <input type="text" class="campo" name="enderecoCompleto" value="<%= usuario.enderecoCompleto %>" readonly>
                        </section>

                        <!-- Campos de endereço separados (modo edição) -->
                        <section class="endereco-detalhado" style="display: none;">

                            <section class="conjunto-separado">
                                <section class="ttl-campo">Endereço:</section>
                                <input type="text" class="campo" name="endereco" id="endereco" value="<%= usuario.endereco %>" readonly>
                            </section>

                            <section class="conjunto-separado">
                                <section class="ttl-campo">Bairro:</section>
                                <input type="text" class="campo" name="bairro" id="bairro" value="<%= usuario.bairro %>" readonly>
                            </section>

                            <section class="conjunto">
                                <section class="ttl-campo">Cidade:</section>
                                <input type="text" class="campo" name="cidade" id="cidade" value="<%= usuario.cidade %>" readonly>
                            </section>

                            <section class="conjunto-separado">
                                <section class="ttl-campo">Número:</section>
                                <input type="text" class="campo" name="numero" id="numero" value="<%= usuario.numero %>" readonly>
                            </section>

                            <section class="conjunto-separado">
                                <section class="ttl-campo">Estado:</section>
                                <input type="text" class="campo" name="uf" id="uf" value="<%= usuario.uf %>" readonly>
                            </section>

                            <section class="conjunto-separado">
                                <section class="ttl-campo">Complemento:</section>
                                <input type="text" class="campo" name="complemento" id="complemento" value="<%= usuario.complemento %>" readonly>
                            </section>
                        </section>

                    </form>
                </section>
            </section>
            <section class="btn-container">
                <button type="button" class="btn-editar" onclick="toggleEdit()">Editar</button>
                <button type="submit" class="btn-salvar" form="formPerfil" style="display: none;">Salvar alterações</button>
            </section>

        </section>
         <!-- NOVO BLOCO: Informações Profissionais -->
        <section class="info-profissional-container">
            <section class="info-profissional-header">
                <h3>Informações Profissionais</h3>
                <button type="button" class="btn-editar-profissional" onclick="toggleEditProfissional()">
                    <i class="bi bi-pencil"></i> Editar
                </button>
            </section>
            
            <section class="info-profissional-content">
                <!-- Regiões de Atendimento -->
                <section class="info-section">
                    <h4><i class="bi bi-geo-alt"></i> Regiões de Atendimento</h4>
                    <ul class="regioes-list" id="regioesList">
                        <!-- As regiões serão carregadas dinamicamente via JavaScript -->
                    </ul>
                    <button type="button" class="add-item-btn" onclick="adicionarRegiao()">+ Adicionar região</button>
                </section>
                
                <!-- Formação Médica -->
                <section class="info-section">
                    <h4><i class="bi bi-mortarboard"></i> Formação Médica</h4>
                    <div id="formacaoList">
                        <!-- As formações serão carregadas dinamicamente via JavaScript -->
                    </div>
                    <button type="button" class="add-item-btn" onclick="adicionarFormacao()">+ Adicionar formação</button>
                </section>
                
                <!-- Tabela de Preços -->
                <section class="info-section">
                    <h4><i class="bi bi-currency-dollar"></i> Tabela de Preços</h4>
                    <table class="tabela-precos" id="tabelaPrecos">
                        <thead>
                            <tr>
                                <th>Modalidade</th>
                                <th>Preço</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Os preços serão carregados dinamicamente via JavaScript -->
                        </tbody>
                    </table>
                </section>
            </section>
            
            <section class="btn-container-profissional">
                <button type="button" class="btn-cancelar-profissional" onclick="toggleEditProfissional()">Cancelar</button>
                <button type="button" class="btn-salvar-profissional" onclick="salvarInformacoesProfissionais()">Salvar alterações</button>
            </section>
        </section>



    </main>

    <footer class="footer">

        <section class="footer-logo">
            <img class="footer-logo-desktop" src="/imagens/logo-bblt.png" alt="Logo da Empresa">
            <img class="footer-logo-mobile" src="/imagens/logo-extenso.png" alt="Logo da Empresa">
            <p class="footer-comentario">Oferecemos atendimento médico e terapêutico através das modalidades do
                atendimento online e domiciliar. Nosso objetivo é promover o acesso aos mais diversos serviços de saúde.
            </p>
        </section>

        <section class="footer-links">
            <h3 class="ttl-links">Explorar</h3>
            <ul class="links">
                <li><a href="#">Quem somos</a></li>
                <li><a href="#">FAQ</a></li>
                <li><a href="/singup">Especialidades</a></li>
                <li><a href="/singup">Consultas</a></li>
            </ul>
        </section>

        <section class="footer-contato">
            <h3 class="ttl-contato">Contato</h3>
            <p class="nmr-contato">(11) 4002-8922</p>
        </section>

    </footer>

    <script>
        // Preview da imagem selecionada
        document.getElementById('inputFoto').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('fotoPerfil').src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

        // Função para alternar modo de edição
        function toggleEdit() {
            const campos = document.querySelectorAll('.campo');
            const btnEditar = document.querySelector('.btn-editar');
            const btnSalvar = document.querySelector('.btn-salvar');
            const btnAlterarFoto = document.querySelector('.btn-alterar-foto');
            const enderecoSimples = document.querySelector('.endereco-simples');
            const enderecoDetalhado = document.querySelector('.endereco-detalhado');
            const enderecoCep = document.querySelector('.endereco-cep');
            const especialidadeDisplay = document.querySelector('.campo-especialidade-display');
            const especialidadeSelect = document.querySelector('.campo-especialidade');
            
            if (btnEditar.textContent === 'Editar') {
                // Entrar no modo de edição - remover readonly de todos os campos editáveis
                campos.forEach(campo => {
                    if (!campo.classList.contains('campo-nao-editavel') && campo.name !== 'senha' && campo.name !== 'enderecoCompleto' && campo.name !== 'especialidadeDisplay') {
                        campo.readOnly = false;
                    }
                });
                
                // Mostrar select de especialidade
                if (especialidadeDisplay && especialidadeSelect) {
                    especialidadeDisplay.style.display = 'none';
                    especialidadeSelect.style.display = 'block';
                    especialidadeSelect.disabled = false;
                }
            } else {
                // Sair do modo de edição - adicionar readonly de volta
                campos.forEach(campo => {
                    if (!campo.classList.contains('campo-nao-editavel')) {
                        campo.readOnly = true;
                    }
                });
                
                // Voltar para display de especialidade
                if (especialidadeDisplay && especialidadeSelect) {
                    especialidadeDisplay.style.display = 'block';
                    especialidadeSelect.style.display = 'none';
                    especialidadeSelect.disabled = true;
                }
            }
            
            if (btnEditar.textContent === 'Editar') {
                btnEditar.textContent = 'Cancelar';
                btnEditar.classList.add('cancelar');
                btnSalvar.style.display = 'inline-block';
                btnAlterarFoto.style.display = 'inline-block';
                document.querySelector('.btn-remover-foto').style.display = 'inline-block';
                
                // Alternar visualização do endereço
                enderecoSimples.style.display = 'none';
                enderecoDetalhado.style.display = 'block';
                enderecoCep.style.display = 'block';
                
            } else {
                btnEditar.textContent = 'Editar';
                btnEditar.classList.remove('cancelar');
                btnSalvar.style.display = 'none';
                btnAlterarFoto.style.display = 'none';
                document.querySelector('.btn-remover-foto').style.display = 'none';
                
                // Voltar visualização do endereço
                enderecoSimples.style.display = 'block';
                enderecoDetalhado.style.display = 'none';
                enderecoCep.style.display = 'none';
                
                // Recarregar página para cancelar alterações
                location.reload();
            }
        }

        // Função para salvar alterações
        document.getElementById('formPerfil').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Coletar todos os dados manualmente
            const dados = {
                nome: document.querySelector('input[name="nome"]').value || '',
                email: document.querySelector('input[name="email"]').value || '',
                cpf: document.querySelector('input[name="cpf"]').value || '',
                dataNascimento: document.querySelector('input[name="dataNascimento"]').value || '',
                especialidade: document.querySelector('select[name="especialidade"]').value || '',
                registroMedico: document.querySelector('input[name="registroMedico"]').value || '',
                cep: document.querySelector('input[name="cep"]').value || '',
                endereco: document.querySelector('input[name="endereco"]').value || '',
                numero: document.querySelector('input[name="numero"]').value || '',
                complemento: document.querySelector('input[name="complemento"]').value || '',
                bairro: document.querySelector('input[name="bairro"]').value || '',
                cidade: document.querySelector('input[name="cidade"]').value || '',
                uf: document.querySelector('input[name="uf"]').value || ''
            };
            
            console.log('Valores capturados:', dados);
            
            // Verificar se deve remover a foto
            if (this.getAttribute('data-remover-foto') === 'true') {
                dados.removerFoto = 'true';
            }
            
            // Converter imagem para base64 se foi selecionada
            const inputFoto = document.getElementById('inputFoto');
            if (inputFoto.files[0]) {
                const file = inputFoto.files[0];
                const reader = new FileReader();
                const base64Promise = new Promise((resolve) => {
                    reader.onload = function(e) {
                        resolve(e.target.result);
                    };
                    reader.readAsDataURL(file);
                });
                const base64 = await base64Promise;
                dados.fotoBase64 = base64;
            }
            
            try {
                // Salvar dados do perfil
                const response = await fetch('/perfil/atualizar-prof', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(dados)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    new Notify({
                        status: 'success',
                        title: 'Sucesso!',
                        text: 'Perfil atualizado com sucesso!',
                        effect: 'fade',
                        speed: 300,
                        autoclose: true,
                        autotimeout: 3000,
                        position: 'right top'
                    });
                    setTimeout(() => location.reload(), 1000);
                } else {
                    new Notify({
                        status: 'error',
                        title: 'Erro!',
                        text: result.message,
                        effect: 'fade',
                        speed: 300,
                        autoclose: true,
                        autotimeout: 3000,
                        position: 'right top'
                    });
                }
            } catch (error) {
                console.error('Erro:', error);
                new Notify({
                    status: 'error',
                    title: 'Erro!',
                    text: 'Erro ao salvar alterações',
                    effect: 'fade',
                    speed: 300,
                    autoclose: true,
                    autotimeout: 3000,
                    position: 'right top'
                });
            }
        });

        // Função personalizada para o viaCEP no perfil
        function limpa_formulário_cep() {
            document.getElementById('endereco').value = "";
            document.getElementById('bairro').value = "";
            document.getElementById('cidade').value = "";
            document.getElementById('uf').value = "";
        }

        function meu_callback(conteudo) {
            if (!("erro" in conteudo)) {
                document.getElementById('endereco').value = conteudo.logradouro;
                document.getElementById('bairro').value = conteudo.bairro;
                document.getElementById('cidade').value = conteudo.localidade;
                document.getElementById('uf').value = conteudo.uf;
            } else {
                limpa_formulário_cep();
                new Notify({
                    status: 'error',
                    title: 'Erro!',
                    text: 'CEP não encontrado.',
                    effect: 'fade',
                    speed: 300,
                    autoclose: true,
                    autotimeout: 3000,
                    position: 'right top'
                });
            }
        }
            
        function pesquisacep(valor) {
            var cep = valor.replace(/\D/g, '');
            
            if (cep != "") {
                var validacep = /^[0-9]{8}$/;
                
                if(validacep.test(cep)) {
                    document.getElementById('endereco').value = "...";
                    document.getElementById('bairro').value = "...";
                    document.getElementById('cidade').value = "...";
                    document.getElementById('uf').value = "...";

                    var script = document.createElement('script');
                    script.src = 'https://viacep.com.br/ws/'+ cep + '/json/?callback=meu_callback';
                    document.body.appendChild(script);
                } else {
                    limpa_formulário_cep();
                    new Notify({
                        status: 'error',
                        title: 'Erro!',
                        text: 'Formato de CEP inválido.',
                        effect: 'fade',
                        speed: 300,
                        autoclose: true,
                        autotimeout: 3000,
                        position: 'right top'
                    });
                }
            } else {
                limpa_formulário_cep();
            }
        }

        // Função para remover foto
        function removerFoto() {
            if (confirm('Tem certeza que deseja remover sua foto de perfil?')) {
                document.getElementById('fotoPerfil').src = '/imagens/perfil-default.svg';
                document.getElementById('inputFoto').value = '';
                // Marcar para remoção no servidor
                document.getElementById('formPerfil').setAttribute('data-remover-foto', 'true');
            }
        }
        
       // ========== NOVAS FUNÇÕES PARA O BLOCO DE INFORMAÇÕES PROFISSIONAIS ==========
        
        // Dados de exemplo (em uma aplicação real, esses dados viriam do servidor)
        let dadosProfissionais = {
            regioes: ["Zona Sul", "Centro", "Zona Oeste"],
            formacao: [
                { curso: "Medicina", instituicao: "Universidade Federal", ano: "2015" },
                { curso: "Residência em Cardiologia", instituicao: "Hospital das Clínicas", ano: "2018" }
            ],
            precos: {
                online: "R$ 150,00",
                domiciliar: "R$ 250,00"
            }
        };
        
        // Carregar dados profissionais quando a página carregar
        document.addEventListener('DOMContentLoaded', function() {
            carregarDadosProfissionais();
        });
        
        // Função para carregar os dados profissionais
        function carregarDadosProfissionais() {
            // Carregar regiões
            const regioesList = document.getElementById('regioesList');
            regioesList.innerHTML = '';
            
            dadosProfissionais.regioes.forEach(regiao => {
                const li = document.createElement('li');
                li.innerHTML = `
                    <i class="bi bi-geo-fill"></i>
                    <span class="regiao-texto">${regiao}</span>
                    <input type="text" class="edit-input" value="${regiao}" style="display: none;">
                    <button type="button" class="remove-item-btn" onclick="removerRegiao(this)">×</button>
                `;
                regioesList.appendChild(li);
            });
            
            // Carregar formação
            const formacaoList = document.getElementById('formacaoList');
            formacaoList.innerHTML = '';
            
            dadosProfissionais.formacao.forEach((formacao, index) => {
                const div = document.createElement('div');
                div.className = 'formacao-item';
                div.innerHTML = `
                    <div class="formacao-texto">
                        <strong>${formacao.curso}</strong>
                        <span>${formacao.instituicao} - ${formacao.ano}</span>
                    </div>
                    <div class="formacao-edit" style="display: none;">
                        <input type="text" class="edit-input" placeholder="Curso" value="${formacao.curso}">
                        <input type="text" class="edit-input" placeholder="Instituição" value="${formacao.instituicao}">
                        <input type="text" class="edit-input" placeholder="Ano" value="${formacao.ano}">
                    </div>
                    <button type="button" class="remove-item-btn" onclick="removerFormacao(${index})">×</button>
                `;
                formacaoList.appendChild(div);
            });
            
            // Carregar preços
            const tabelaPrecos = document.querySelector('#tabelaPrecos tbody');
            tabelaPrecos.innerHTML = '';
            
            const modalidades = [
                { nome: 'Online', preco: dadosProfissionais.precos.online },
                { nome: 'Domiciliar', preco: dadosProfissionais.precos.domiciliar }
            ];
            
            modalidades.forEach(modalidade => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${modalidade.nome}</td>
                    <td>
                        <span class="preco-texto">${modalidade.preco}</span>
                        <input type="text" class="edit-input preco-edit" value="${modalidade.preco}" style="display: none;">
                    </td>
                `;
                tabelaPrecos.appendChild(tr);
            });
        }
        
        // Função para alternar modo de edição das informações profissionais
        function toggleEditProfissional() {
            const container = document.querySelector('.info-profissional-container');
            const btnEditar = document.querySelector('.btn-editar-profissional');
            const btnSalvar = document.querySelector('.btn-salvar-profissional');
            const btnCancelar = document.querySelector('.btn-cancelar-profissional');
            
            if (container.classList.contains('edit-mode')) {
                // Sair do modo de edição
                container.classList.remove('edit-mode');
                btnEditar.style.display = 'flex';
                btnSalvar.style.display = 'none';
                btnCancelar.style.display = 'none';
                
                // Esconder campos de edição e mostrar texto
                document.querySelectorAll('.regiao-texto').forEach(el => el.style.display = 'inline');
                document.querySelectorAll('.regioes-list input').forEach(el => el.style.display = 'none');
                
                document.querySelectorAll('.formacao-texto').forEach(el => el.style.display = 'block');
                document.querySelectorAll('.formacao-edit').forEach(el => el.style.display = 'none');
                
                document.querySelectorAll('.preco-texto').forEach(el => el.style.display = 'inline');
                document.querySelectorAll('.preco-edit').forEach(el => el.style.display = 'none');
                
                // Recarregar dados para cancelar alterações
                carregarDadosProfissionais();
            } else {
                // Entrar no modo de edição
                container.classList.add('edit-mode');
                btnEditar.style.display = 'none';
                btnSalvar.style.display = 'inline-block';
                btnCancelar.style.display = 'inline-block';
                
                // Mostrar campos de edição e esconder texto
                document.querySelectorAll('.regiao-texto').forEach(el => el.style.display = 'none');
                document.querySelectorAll('.regioes-list input').forEach(el => el.style.display = 'inline');
                
                document.querySelectorAll('.formacao-texto').forEach(el => el.style.display = 'none');
                document.querySelectorAll('.formacao-edit').forEach(el => el.style.display = 'block');
                
                document.querySelectorAll('.preco-texto').forEach(el => el.style.display = 'none');
                document.querySelectorAll('.preco-edit').forEach(el => el.style.display = 'inline');
            }
        }
        
        // Função para adicionar uma nova região
        function adicionarRegiao() {
            const regioesList = document.getElementById('regioesList');
            const li = document.createElement('li');
            li.innerHTML = `
                <i class="bi bi-geo-fill"></i>
                <span class="regiao-texto" style="display: none;">Nova região</span>
                <input type="text" class="edit-input" value="Nova região">
                <button type="button" class="remove-item-btn" onclick="removerRegiao(this)">×</button>
            `;
            regioesList.appendChild(li);
        }
        
        // Função para remover uma região
        function removerRegiao(btn) {
            btn.parentElement.remove();
        }
        
        // Função para adicionar uma nova formação
        function adicionarFormacao() {
            const formacaoList = document.getElementById('formacaoList');
            const div = document.createElement('div');
            div.className = 'formacao-item';
            div.innerHTML = `
                <div class="formacao-texto" style="display: none;">
                    <strong>Novo curso</strong>
                    <span>Nova instituição - Novo ano</span>
                </div>
                <div class="formacao-edit">
                    <input type="text" class="edit-input" placeholder="Curso" value="Novo curso">
                    <input type="text" class="edit-input" placeholder="Instituição" value="Nova instituição">
                    <input type="text" class="edit-input" placeholder="Ano" value="Novo ano">
                </div>
                <button type="button" class="remove-item-btn" onclick="this.parentElement.remove()">×</button>
            `;
            formacaoList.appendChild(div);
        }
        
        // Função para remover uma formação
        function removerFormacao(index) {
            // Em uma aplicação real, você enviaria o índice para o servidor
            // Aqui apenas removemos do array local
            dadosProfissionais.formacao.splice(index, 1);
            carregarDadosProfissionais();
        }
        
        // Função para salvar as informações profissionais
        function salvarInformacoesProfissionais() {
            // Coletar regiões atualizadas
            const novasRegioes = [];
            document.querySelectorAll('.regioes-list input').forEach(input => {
                if (input.value.trim() !== '') {
                    novasRegioes.push(input.value.trim());
                }
            });
            
            // Coletar formações atualizadas
            const novaFormacao = [];
            document.querySelectorAll('.formacao-item').forEach(item => {
                const inputs = item.querySelectorAll('.formacao-edit input');
                if (inputs[0].value.trim() !== '' && inputs[1].value.trim() !== '' && inputs[2].value.trim() !== '') {
                    novaFormacao.push({
                        curso: inputs[0].value.trim(),
                        instituicao: inputs[1].value.trim(),
                        ano: inputs[2].value.trim()
                    });
                }
            });
            
            // Coletar preços atualizados
            const novosPrecos = {};
            const precoInputs = document.querySelectorAll('.preco-edit');
            novosPrecos.online = precoInputs[0].value.trim();
            novosPrecos.domiciliar = precoInputs[1].value.trim();
            
            // Atualizar dados locais
            dadosProfissionais.regioes = novasRegioes;
            dadosProfissionais.formacao = novaFormacao;
            dadosProfissionais.precos = novosPrecos;
            
            // Em uma aplicação real, você enviaria esses dados para o servidor
            // Aqui apenas simulamos o salvamento
            console.log('Dados profissionais a serem salvos:', dadosProfissionais);
            
            // Mostrar mensagem de sucesso
            new Notify({
                status: 'success',
                title: 'Sucesso!',
                text: 'Informações profissionais salvas com sucesso!',
                effect: 'fade',
                speed: 300,
                autoclose: true,
                autotimeout: 3000,
                position: 'right top'
            });
            
            // Sair do modo de edição
            toggleEditProfissional();
        }
    </script>


</body>

</html>