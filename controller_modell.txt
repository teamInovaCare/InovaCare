/*try {
    // 2. Junta TODOS os dados
    const dadosCompletos = {
      ...req.session.dadosEtapa1,  // Dados da etapa 1 (nome, CPF, etc.)
      ...req.session.dadosEtapa2,  // Dados da etapa 2 (endereço, email, etc.)
      senha: bcrypt.hashSync(req.body.senha, 10),  // Criptografa a senha
      repsenha: req.body.repsenha,
      repemail: req.body.repemail
    };

    // 3. Insere no banco de dados
    const resultado = await usuarioModel.create(dadosCompletos);

    if (resultado) {
      // 4. Limpa a sessão
      req.session.dadosEtapa1 = null;
      req.session.dadosEtapa2 = null;
      
      // CONCLUSÃ DO CADASTRO--- VOLTA TUDO
      return res.render("pages/home", { 
        erros: null, 
        valores: null,
        retorno: { mensagem: "Cadastro concluído!" }
      });
    } else {
      throw new Error("Falha ao cadastrar no banco de dados");
    }
  } catch (error) {
    console.error(error);
    return res.render("pages/cadastro_dados", {
      erros: [{ msg: "Erro interno. Tente novamente." }],
      valores: req.body,
      retorno: {
        ...req.session.dadosEtapa1,
        ...req.session.dadosEtapa2
      }
    });
  }
}
 */


MODEL 

/*const usuarioModel = {

    create: async (dadosFormulario) => {
        try{
            const[resultados]= await pool.query("insert into `usuarios`" + "(`tipo_usuario`, `status_usuario`, `nome_usuario`, `email_usuario`, `senha_usuario`, `cpf_usuario`, `foto_usuario`)" + "values(?,?,?,?,?,?,?)", [dadosFormulario.tipo || 'paciente',
                dadosFormulario.status || 'ativo',dadosFormulario.nome,dadosFormulario.email,dadosFormulario.senha,dadosFormulario.cpf,dadosFormulario.foto]);

            if ((dadosFormulario.tipo || 'paciente') === 'paciente'){
                await pool.query("insert into `pacientes`" + "(`dt_nasc_paciente`,`logradouro_paciente`, `bairro_paciente`,`cidade_paciente`,`uf_paciente`,`complemento`,`cep`,`fk_is_usuario`,)"+ "values(?,?,?,?,?,?,?,?)", [dadosFormulario.dt_nasc, dadosFormulario.logradouro,dadosFormulario.bairro,dadosFormulario.cidade,dadosFormulario.uf,dadosFormulario.complemento,dadosFormulario.cep,
                resultados.insertID
                ]);
            }
                
            console.log(resultados);
            return(resultados);

        }catch (erro){
            console.log(erro);
            return false;
        }
        
    }
}*/

